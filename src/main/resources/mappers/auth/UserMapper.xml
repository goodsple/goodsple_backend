<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goodsple.features.auth.mapper.UserMapper">

    <insert id="createUser" parameterType="com.goodsple.features.auth.entity.User">
        INSERT INTO users (
            login_id, password, name, nickname, email,
            phone_number, birth_date, gender, role,
            suspension_status, login_type, is_banned_from_auction, kakao_id
        ) VALUES (
                     #{loginId}, #{password}, #{name}, #{nickname}, #{email},
                     #{phoneNumber}, #{birthDate},
                     #{gender, jdbcType=OTHER},
                     #{role, jdbcType=OTHER},
                     #{suspensionStatus, jdbcType=OTHER},
                     #{loginType, jdbcType=OTHER},
                     #{isBannedFromAuction}, #{kakaoId}
                 )
    </insert>

    <select id="existsByLoginId" parameterType="String" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT 1 FROM users WHERE login_id = #{loginId})
    </select>

    <select id="existsByNickname" parameterType="String" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT 1 FROM users WHERE nickname = #{nickname})
    </select>

    <select id="existsByEmail" parameterType="String" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT 1 FROM users WHERE email = #{email})
    </select>

    <select id="existsByPhoneNumber" parameterType="String" resultType="java.lang.Boolean">
        SELECT EXISTS(SELECT 1 FROM users WHERE phone_number = #{phoneNumber})
    </select>

    <select id="findByLoginId" parameterType="String" resultType="com.goodsple.features.auth.entity.User">
        SELECT * FROM users WHERE login_id = #{loginId}
    </select>

    <select id="findByKakaoId" parameterType="String" resultType="com.goodsple.features.auth.entity.User">
        SELECT * FROM users WHERE kakao_id = #{kakaoId}
    </select>

    <!-- userId로 사용자 정보를 조회 -->
    <select id="findById" parameterType="long" resultType="com.goodsple.features.auth.entity.User">
        SELECT
            user_id   AS userId, login_id  AS loginId, password,name,nickname,email,
            phone_number  AS phoneNumber, birth_date    AS birthDate,
            gender,role,profile_image  AS profileImage,
            suspension_status  AS suspensionStatus,suspended_until  AS suspendedUntil,
            user_created_at  AS userCreatedAt,user_updated_at  AS userUpdatedAt,
            login_type  AS loginType,kakao_id  AS kakaoId,
            is_banned_from_auction  AS isBannedFromAuction
        FROM users
        WHERE user_id = #{userId}
    </select>

<!-- 아이디 찾기   -->
    <insert id="insertFindIdCode">
        INSERT INTO find_id_code(email, code, expires_at)
        VALUES(#{email}, #{code}, #{expiresAt})
    </insert>

    <select id="selectFindIdCode" resultType="string">
        SELECT code
        FROM find_id_code
        WHERE email = #{email}
          AND code  = #{code}
          AND expires_at &gt; #{now}
    </select>

    <select id="selectLoginIdByNameAndEmail" resultType="string">
        SELECT login_id
        FROM users
        WHERE name = #{name}
          AND email = #{email}
    </select>

<!-- 비밀번호 찾기 -->
    <!-- 1. 아이디 + 이메일로 사용자 조회 -->
    <select id="selectByLoginIdAndEmail" resultType="com.goodsple.features.auth.entity.User">
        SELECT *
        FROM users
        WHERE login_id = #{loginId}
          AND email = #{email}
    </select>

    <!-- 2. 비밀번호 업데이트 -->
    <update id="updatePassword">
        UPDATE users
        SET password = #{password}
        WHERE user_id = #{userId}
    </update>

    <insert id="insertResetPasswordCode">
        INSERT INTO reset_password_code(email, code, expires_at)
        VALUES(#{email}, #{code}, #{expiresAt})
    </insert>

    <select id="selectResetPasswordCode" resultType="string">
        SELECT code
        FROM reset_password_code
        WHERE email = #{email}
          AND code  = #{code}
          AND expires_at &gt; #{now}
    </select>
</mapper>