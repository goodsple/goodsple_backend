<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goodsple.features.admin.user.mapper.AdminUserMapper">    <!-- 목록 조회 -->
    <select id="selectAdminUsers" resultType="com.goodsple.features.admin.user.dto.AdminUserSummary">SELECT u.user_id AS
        userId, u.login_id AS loginId, u.nickname AS nickname, u.role AS role, u.suspension_status AS suspensionStatus,
        COALESCE((SELECT COUNT(*) FROM reviews r WHERE r.writer_id = u.user_id), 0) AS reviewCount, COALESCE(( SELECT
        COUNT(*) FROM exchange_post ep WHERE ep.user_id = u.user_id AND ep.post_trade_status IN ('COMPLETED') ), 0) +
        COALESCE(( SELECT COUNT(*) FROM auctions a WHERE a.auction_winning_user_id = u.user_id AND a.auction_status IN
        ('ended') ), 0) AS tradeCount, COALESCE((SELECT COUNT(*) FROM reports rp WHERE rp.report_target_user_id =
        u.user_id), 0) AS reportCount, u.user_created_at AS joinedAt FROM users u
        <where>            <!-- A. userId 숫자 파라미터로 직접 들어오는 경우 -->
            <if test="cond.userId != null">AND u.user_id = #{cond.userId}
            </if>            <!-- B. queryType=userId & query=숫자 문자열로 들어오는 경우 (백업용) -->
            <if test="cond.userId == null and cond.query != null and cond.queryType == 'userId'">AND u.user_id =
                CAST(TRIM(#{cond.query, jdbcType=VARCHAR}) AS BIGINT)
            </if>
            <if test="cond.query != null and cond.queryType == 'nickname'">AND u.nickname ILIKE CONCAT('%',
                #{cond.query}, '%')
            </if>            <!-- 권한 필터 -->
            <if test="cond.roles != null and cond.roles.size > 0">AND u.role IN
                <foreach
                        collection="cond.roles" item="r" open="(" separator="," close=")">CAST(#{r,jdbcType=VARCHAR} AS
                    role_enum)
                </foreach>
            </if>            <!-- 상태 필터 -->
            <if test="cond.statuses != null and cond.statuses.size > 0">AND u.suspension_status IN
                <foreach
                        collection="cond.statuses" item="s" open="(" separator="," close=")">CAST(#{s,jdbcType=VARCHAR}
                    AS
                    suspension_enum)
                </foreach>
            </if>
            <if test="cond.joinedFrom != null">AND u.user_created_at &gt;= #{cond.joinedFrom}</if>
            <if test="cond.joinedTo != null">                <!-- 포함 검색: joinedTo의 다음날 0시 '미만' -->
                AND
                u.user_created_at &lt; (#{cond.joinedTo} + INTERVAL '1 day')
            </if>
        </where>
        ORDER BY u.user_id DESC LIMIT #{cond.size} OFFSET #{offset}
    </select>    <!-- 총 개수 -->

    <select id="countAdminUsers" resultType="long">SELECT COUNT(*) FROM users u
        <where>
            <if test="cond.userId == null and cond.query != null and cond.queryType == 'userId'">AND u.user_id =
                CAST(TRIM(#{cond.query, jdbcType=VARCHAR}) AS BIGINT)
            </if>
            <if test="cond.query != null and cond.queryType == 'nickname'">AND u.nickname ILIKE CONCAT('%',
                #{cond.query}, '%')
            </if>            <!-- 권한 필터 -->
            <if test="cond.roles != null and cond.roles.size > 0">AND u.role IN
                <foreach
                        collection="cond.roles" item="r" open="(" separator="," close=")">CAST(#{r,jdbcType=VARCHAR} AS
                    role_enum)
                </foreach>
            </if>            <!-- 상태 필터 -->
            <if test="cond.statuses != null and cond.statuses.size > 0">AND u.suspension_status IN
                <foreach
                        collection="cond.statuses" item="s" open="(" separator="," close=")">CAST(#{s,jdbcType=VARCHAR}
                    AS
                    suspension_enum)
                </foreach>
            </if>
            <if test="cond.joinedFrom != null">AND u.user_created_at &gt;= #{cond.joinedFrom}</if>
            <if test="cond.joinedTo != null">AND u.user_created_at &lt; (#{cond.joinedTo} + INTERVAL '1 day')</if>
        </where>
    </select>    <!-- 상세 조회 -->
    <select id="selectAdminUserDetail" parameterType="long"
            resultType="com.goodsple.features.admin.user.dto.AdminUserDetail">
        SELECT u.user_id           AS userId,
               u.login_id          AS loginId,
               u.nickname          AS nickname,
               u.email             AS email,
               u.role              AS role,
               u.suspension_status AS suspensionStatus,
               u.user_created_at   AS joinedAt,
               COALESCE(
                       (SELECT COUNT(*) FROM reviews r WHERE r.writer_id = u.user_id),
                       0)          AS reviewCount, /* 목록과 동일한 거래횟수 계산 */
               COALESCE((SELECT COUNT(*)
                         FROM exchange_post ep
                         WHERE ep.user_id = u.user_id
                           AND ep.post_trade_status IN ('COMPLETED')
        -- 교환 완료),0)+COALESCE((SELECT COUNT(*) FROM auctions a WHERE a.auction_winning_user_id = u.user_id AND a.auction_status IN ('ended')  -- 경매 낙찰(구매)), 0) AS tradeCount,COALESCE((SELECT COUNT(*) FROM reports rp WHERE rp.report_target_user_id = u.user_id), 0) AS reportCount FROM users u WHERE u.user_id = #{userId}
    </select>

    <!-- 상태/권한 변경 -->
    <update id="adminUpdateUserStatus">UPDATE users
        <set>
            <if test="status != null">suspension_status =
                #{status, jdbcType=OTHER,                typeHandler=com.goodsple.typehandler.SuspensionStatusTypeHandler},
            </if>
            <if test="role != null">role =
                #{role, jdbcType=OTHER,                typeHandler=com.goodsple.typehandler.RoleTypeHandler},
            </if>
            user_updated_at = NOW()
        </set>
        WHERE user_id = #{userId}
    </update>    <!-- (탈퇴 상태에서만) 실제 삭제 -->

    <delete id="deleteUserIfWithdrawn" parameterType="long">
        DELETE
        FROM users
        WHERE user_id = #{userId}
          AND suspension_status = 'withdrawn'    </delete>
</mapper>