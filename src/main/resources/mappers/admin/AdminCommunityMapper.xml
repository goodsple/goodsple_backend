<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.goodsple.features.admin.community.mapper.AdminCommunityMapper">

    <!-- 하루 + 채팅방 단위 요약 -->
    <select id="findDailySummary" resultType="com.goodsple.features.admin.community.dto.AdminCommunitySummaryDTO">
        SELECT
            daily.date,
            daily.comm_room_id AS commRoomId,
            COUNT(DISTINCT c1.user_id) AS participantCount,
            COUNT(*) AS messageCount,
            lm.content AS lastMessage
        FROM community c1
                 JOIN (
            SELECT DISTINCT comm_room_id, comm_created_at::date AS date
            FROM community
        ) daily
                      ON daily.comm_room_id = c1.comm_room_id
                          AND daily.date = c1.comm_created_at::date
    LEFT JOIN LATERAL (
        SELECT content
        FROM community c2
        WHERE c2.comm_room_id = daily.comm_room_id
          AND c2.comm_created_at::date = daily.date
        ORDER BY c2.comm_created_at DESC
        LIMIT 1
    ) lm ON TRUE
        GROUP BY daily.date, daily.comm_room_id, lm.content
        ORDER BY daily.date DESC, daily.comm_room_id;
    </select>


    <!-- 상세보기 -->
    <select id="findDetailsByDateAndRoom" resultType="com.goodsple.features.admin.community.dto.AdminCommunityDetailDTO">
        SELECT
            community_id AS communityId,
            user_id AS userId,
            comm_room_id AS commRoomId,
            content,
            comm_created_at AS commCreatedAt,
            type
        FROM community
        WHERE DATE(comm_created_at) = #{date}
          AND comm_room_id = #{commRoomId}
        ORDER BY comm_created_at ASC
    </select>

    <!-- 채팅방 목록 조회 -->
    <select id="findAllChatRooms" resultType="com.goodsple.features.admin.community.dto.ChatRoomDTO">
        SELECT DISTINCT comm_room_id AS roomId,
                        comm_room_id AS roomName -- 현재 이름이 없으면 ID로 대체
        FROM community
        ORDER BY comm_room_id;
    </select>



    <select id="findDailySummaryFiltered" resultType="com.goodsple.features.admin.community.dto.AdminCommunitySummaryDTO">
        SELECT
        c.comm_created_at::date AS date,
        c.comm_room_id AS commRoomId,
        COUNT(DISTINCT c.user_id) AS participantCount,
        COUNT(*) AS messageCount,
        lm.content AS lastMessage
        FROM community c
        LEFT JOIN LATERAL (
        SELECT content
        FROM community c2
        WHERE c2.comm_room_id = c.comm_room_id
        AND c2.comm_created_at::date = c.comm_created_at::date
        ORDER BY c2.comm_created_at DESC
        LIMIT 1
        ) lm ON TRUE
        <where>
            <if test="roomId != null and roomId != ''">
                TRIM(c.comm_room_id) = TRIM(#{roomId})
            </if>
            <if test="startDate != null">
                AND c.comm_created_at &gt;= #{startDate,jdbcType=DATE}
            </if>
            <if test="endDate != null">
                AND c.comm_created_at &lt;= #{endDate,jdbcType=DATE}
            </if>
        </where>
        GROUP BY c.comm_created_at::date, c.comm_room_id, lm.content
        ORDER BY date DESC, commRoomId;
    </select>


</mapper>
